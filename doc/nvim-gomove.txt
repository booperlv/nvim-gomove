================================================================================

*gomove*
Moving and duplicating blocks and lines, with complete
fold handling, reindenting, and undoing in one go.

Author: booperlv <github.com/booperlv>
License: MIT (see |gomove-license|)

================================================================================

CONTENTS                                                       *gomove-contents*

  1. Quick Start ....................................... |gomove-quickstart|
  2. Usage ............................................. |gomove-usage|
  3. Options ........................................... |gomove-options|
  4. Mappings .......................................... |gomove-mappings|
  5. License ........................................... |gomove-license|
  6. Credits ........................................... |gomove-credits|

================================================================================

1. QUICK START                                               *gomove-quickstart*
>
  require("gomove").setup()
<
================================================================================

2. USAGE                                                          *gomove-usage*

The default "smart" move mappings work this way:

Normal Mode:
>
  <A-h> = Block Left
  <A-j> = Line Down
  <A-k> = Line Up
  <A-l> = Block Right
<

Visual Mode:
>
  <A-h> = Block Left
  <A-j> = Line Down
  <A-k> = Line Up
  <A-l> = Block Right
<

Line-Visual Mode:
>
  <A-h> = Line Left
  <A-j> = Line Down
  <A-k> = Line Up
  <A-l> = Line Right
<

Block-Visual Mode:
>
  <A-h> = Block Left
  <A-j> = Block Down
  <A-k> = Block Up
  <A-l> = Block Right
<

|<A-S-(h/j/k/l)>| duplicates respectively


================================================================================

3. OPTIONS                                                      *gomove-options*

nvim-gomove can be configured through a lua setup function
>
  lua require("gomove").setup {
    map_defaults = (true/false),
    reindent_mode = ("vim-move" / "simple" / ("none"/nil))
    move_past_line = (true/false),
    ignore_indent_lh_dup = (true/false),
  }
<
--------------------------------------------------------------------------------

|map_defaults|                                             *gomove_map_defaults*

Whether or not to map

- <A-h> to Move Left
- <A-j> to Move Down
- <A-k> to Move Up
- <A-l> to Move Right

- <A-S-h> to Duplicate Left
- <A-S-j> to Duplicate Down
- <A-S-k> to Duplicate Up
- <A-S-l> to Duplicate Right

|reindent-mode|                                           *gomove_reindent_mode*

Option to change how lines moved vertically are reindented
- "vim-move" (same way vim-move does it)
- "simple" (simply does a "==" over the selection)
- "none"/nil (does not reindent)

|move_past_line|                                         *gomove_move_past_line*

Whether or not to move past line when moving horizontally
- true / false

|ignore_indent_lh_dup|              *gomove_ignore_indent_lh_dup*

Whether or not to move past line when moving horizontally
- true / false

================================================================================

4. MAPPINGS                                                    *gomove-mappings*

While there are default mappings that are designed to be as intuitive out of the
box, that is built on these mappings which can serve as a framework. Check
gomove/mappings/smart.lua as an example of the usage of these mappings.

Naming Convention:
Go, Normal/Visual, Move/Duplicate, Line/Block, Direction

--------------------------------------------------------------------------------

Line Vertical:

<Plug>GoNMLine(Down/Up)
In Normal Mode, Move current line down/up.
Moves along folds.

<Plug>GoNVLine(Down/Up)
In Visual Mode, Move selected lines down/up.
Moves along folds.

<Plug>GoNDLine(Down/Up)
In Normal Mode, Duplicate current line down/up.
Moves along folds.

<Plug>GoVDLine(Down/Up)
In Visual Mode, Duplicate selected lines down/up.
Moves along folds.

--------------------------------------------------------------------------------

Line Horizontal:

<Plug>GoNMLine(Left/Right)
In Normal Mode, Move current line to the left/right by (indent level).

<Plug>GoVMLine(Left/Right)
In Visual Mode, Move selected lines to the left/right by (indent level).

<Plug>GoNDLine(Left/Right)
In Normal Mode, Duplicate current line to the left/right.
The functionality is affected by |ignore_indent_lh_dup|

<Plug>GoVDLine(Left/Right)
In Visual Mode, Duplicate selected lines to the left/right.
The functionality is affected by |ignore_indent_lh_dup|

--------------------------------------------------------------------------------

Block Vertical:

<Plug>GoNMBlock(Down/Up)
In Normal Mode, Move current character down/up.
Tries to avoid folds.

<Plug>GoVMBlock(Down/Up)
In Visual Mode, Move selected characters down/up.
Tries to avoid folds.

<Plug>GoNDBlock(Down/Up)
In Normal Mode, Duplicate current character down/up.
Tries to avoid folds.

<Plug>GoVDBlock(Down/Up)
In Visual Mode, Duplicate selected characters down/up.
Tries to avoid folds.

--------------------------------------------------------------------------------

Block Horizontal:

<Plug>GoNMBlock(Left/Right)
In Normal Mode, Move current character left/right.

<Plug>GoVMBlock(Left/Right)
In Visual Mode, Move selected characters left/right.

<Plug>GoNDBlock(Left/Right)
In Normal Mode, Duplicate current character left/right.

<Plug>GoVDBlock(Left/Right)
In Visual Mode, Duplicate selected characters left/right.

--------------------------------------------------------------------------------
================================================================================

5. License                                                      *gomove-license*

This plugin is licensed under the MIT license.

================================================================================

6. Credits                                                      *gomove-credits*

matze/vim-move (https://github.com/matze/vim-move)
  much of the initial work was based on this plugin, and many of the code here
  was reused and refactored for lua. Big thanks to all the people who
  contributed there :)

t9md/vim-textmanip (https://github.com/t9md/vim-textmanip)
  many features were made possible using this plugin as a reference, and was a
  general reference for ideal behaviors. Thank you to the author and all the
  contributors, it felt very polished :)

================================================================================

vim:ft=help:
